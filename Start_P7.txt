***Création du repo Git  
https://github.com/matthieu661/P7_Boistard_Matthieu
clone repos sur matthieu pc secours
***Création d'une collection Postman "P7"

***methode :
Aprés installation clean --> commit --> New branch "base Projet" (.save)

SQL:
    -Creation de la database Groupomania :
    -log to mysql avec le root 
        - cmd --> mysql -uroot --> demande le mdp : Antilops123 --> connecté
    -Création de la DB
        - CREATE DATABASE groupomania;
BACKEND:
    -Creation du .gitignore ( add --> startP7 / ... )
    -Installation de nmp --> ps : npm install
    -Initialisation de npm --> ps : npm install
    add-on :
    -Installation de nodemon : ps : npm install --save-dev nodemon (autorefresh)
                    https://www.npmjs.com/package/nodemon
    -Installation de expresse : ps : npm install express --save (framework)
                    http://expressjs.com/
    -Installation de sequalize : ps : npm install --save sequelize (ODM gestion SQL -- remplace mongoose)
                    https://sequelize.org/master/manual/getting-started.html

Retour sur Master -->


--->New branche 'BackEnd' aprés le setup du projet
    -new branch 'function_X' pour chaques étapes clée puis merge.

        -création de la structure basique du Backend
            - Fichier server src : --> server.js
            - Fichier Racine express : --> app.js
            - Installation de sequelize-cli --> npm install sequelize-cli
            --> structure du BACKEND :
                - Init de sequelize --> npx sequelize init (not npm=npX)
                    - Fichier config\config.json (crée par sequelize-cli)
                    - Dossier models (crée par sequalize-cli)
                    - Dossier migrations (crée par sequalize-cli)
                    - Dossier seeders (crée par sequelize-cli)
                - Dossier middleweare
                - Dossier route
                - Dossier controller 

                        commit --> git add . --> git commit -m"structure backend"

    --->New branch BackEnd_Sql_Config 

        - Installation de sql dans le projet : npm install sql2
        - Connection à workbench 8.0 --> root mdp(Antilops123)    
                -query : DROP DATABASE IF EXISTS groupomania;
                        CREATE DATABASE groupomania; (test)

            - config de sequelize : 
                https://github.com/sequelize/sequelize/tree/3e5b8772ef75169685fc96024366bca9958fee63
                https://sequelize.org/master/index.html

                - config\config.json : changement password : Antilops123 et database : groupomania

                - config server.js : 
                    - Supression du template server.js
                    - Import de la database sequelize ( chemin basique ) :  --> const db = require("./models");
                    - Appel de la la db via sync.sequelize ( modification de la function template L-45); (X.sequelize.sync)

                - Creation des models de donnée (tables) via sequelize :
                    - 1 création d'un model générique Todo --> ./models/Todos.js
                    - 2 verification dans workbench ( schema --> groupomania --> tables )
                    - 3 création d'une route test : ./routes/apiRoutes
                    - 4 Ajout du chemin dans app.js
                    - 5 test de connexion avec POSTMAN 
                        - P7 collection --> GET : http://localhost:3000/api/all
                        - result = pass OK
                
                            commit --> git add . --> git commit -m "Sequalize configuration basique + Test postman"                
    
    --->New branch BackEnd_Sequelize_Routes










-New branch 'Frontend' aprés la réalisation du FrontEnd
    -new branch 'function' pour chaques étapes puis merge.
..
-New branch 'soutenance' pour la présentation

***Techno :
FrontEnd :
-Vue.js / Scss

Backend :
-express (framework)
-sequalize (ODM)
-mysql (bdd)
-workbench 8.0 (visual sql)
-PostMAN (route helper)

***Setup projet :
-node
-npm init
-npm install sequelize sequelize-cli sql2
...
